}
mainPageData$link
mainPageData
names(mainPageData)
col.names(mainPageData) = c("code", "title", "businesses", "link")
colnames(mainPageData) = c("code", "title", "businesses", "link")
mainPageData$link
mainPageData
mainPageData$code
colnames(mainPageData) = c("code", "title", "businesses", "link")
mainPageData$code
mainPageData = c()
rows = mainPage %>% html_nodes(".table tr")
for (row in rows[2:(length(rows)-1)])
{
columns = row %>% html_nodes("td")
columnText = columns %>% html_text()
link = columns[1] %>% html_node("a") %>% html_attr("href")
mpdRow = list(code=columnText[1],
title=columnText[2],
businesses=columnText[3],
link=link)
mainPageData = rbind(mpdRow, mainPageData)
}
mainPageData
mainPageData
mainPageData = data.frame()
rows = mainPage %>% html_nodes(".table tr")
for (i in 2:(length(rows)-1))
{
row = rows[i]
columns = row %>% html_nodes("td")
columnText = columns %>% html_text()
link = columns[1] %>% html_node("a") %>% html_attr("href")
mainPageData[nrow(mainPageData) + 1,] = list(code=columnText[1],
title=columnText[2],
businesses=columnText[3],
link=link)
}
mainPageData
mainPageData = data.frame(code=character(0), title=character(0), businesses=character(0), link=character(0))
rows = mainPage %>% html_nodes(".table tr")
for (i in 2:(length(rows)-1))
{
row = rows[i]
columns = row %>% html_nodes("td")
columnText = columns %>% html_text()
link = columns[1] %>% html_node("a") %>% html_attr("href")
mainPageData[nrow(mainPageData) + 1,] = list(code=columnText[1],
title=columnText[2],
businesses=columnText[3],
link=link)
}
warnings()
mainPageData = data.frame(code=character(0), title=character(0), businesses=character(0), link=character(0), stringsAsFactors = FALSE)
rows = mainPage %>% html_nodes(".table tr")
for (i in 2:(length(rows)-1))
{
row = rows[i]
columns = row %>% html_nodes("td")
columnText = columns %>% html_text()
link = columns[1] %>% html_node("a") %>% html_attr("href")
mainPageData[nrow(mainPageData) + 1,] = list(code=columnText[1],
title=columnText[2],
businesses=columnText[3],
link=link)
}
colnames(mainPageData) = c("code", "title", "businesses", "link")
mainPageData
mainPageData$link
#install.packages("rvest")
library(rvest)
mainPage = html("https://www.naics.com/business-lists/counts-by-naics-code/")
#Grab the summaries of each industry (NAIC2)
NAICS2 = data.frame(code=character(0), title=character(0), businesses=character(0), link=character(0), stringsAsFactors = FALSE)
rows = mainPage %>% html_nodes(".table tr")
for (i in 2:(length(rows)-1))
{
row = rows[i]
columns = row %>% html_nodes("td")
columnText = columns %>% html_text()
link = columns[1] %>% html_node("a") %>% html_attr("href")
NAICS2[nrow(NAICS2) + 1,] = list(code=columnText[1],
title=columnText[2],
businesses=columnText[3],
link=link)
}
colnames(NAICS2) = c("code", "title", "businesses", "link")
NAICS2
NAICS2$link
NAICS2$link[1]
page = html(NAICS2$link[1])
page
page %>% html_nodes(".table tr")
page %>% html_nodes(".table tr")[1]
a= page %>% html_nodes(".table tr")
rows = page %>% html_nodes(".table tr")
rows
rows[1]
rows[2]
rows[2] %>% html_nodes(".headerRow")
rows[2] %>% attr("class")
rows[2] %>% html_attr("class")
rows = page %>% html_nodes(".table tr .headerRow")
rows
rows = page %>% html_nodes(".headerRow")
rows
rows = page %>% html_nodes(".table tr.headerRow")
rows
rows = page %>% html_nodes(".table tr.headerRow.groupFinal")
rows
page %>% html_nodes(".table tr.headerRow.groupFinal")
page %>% html_nodes(".table tr.headerRow")
page %>% html_nodes(".table tr.headerRow:not(groupFinal)")
page %>% html_nodes(".table tr.headerRow :not(groupFinal)")
page %>% html_nodes(".table tr.headerRow")
page %>% html_nodes(".table tr.headerRow")
nrow(page %>% html_nodes(".table tr.headerRow"))
page %>% html_nodes(".table tr.headerRow") %>% nrow()
page %>% html_nodes(".table tr.headerRow")
page %>% html_nodes(".table tr.headerRow") %>% length()
page %>% html_nodes(".table tr.headerRow:not(.groupFinal)") %>% length()
NAICS2 = data.frame(code=character(0), title=character(0), businesses=character(0), link=character(0), stringsAsFactors = FALSE)
rows = mainPage %>% html_nodes(".table tr")
for (i in 2:(length(rows)))
{
row = rows[i]
columns = row %>% html_nodes("td")
columnText = columns %>% html_text()
link = columns[1] %>% html_node("a") %>% html_attr("href")
NAICS2[nrow(NAICS2) + 1,] = list(code=columnText[1],
title=columnText[2],
businesses=columnText[3],
link=link)
}
colnames(NAICS2) = c("code", "title", "businesses", "link")
NAICS2
NAICS2 = data.frame(code=character(0), title=character(0), businesses=character(0), link=character(0), stringsAsFactors = FALSE)
rows = mainPage %>% html_nodes(".table tr")
for (i in 2:(length(rows)-1))
{
row = rows[i]
columns = row %>% html_nodes("td")
columnText = columns %>% html_text()
link = columns[1] %>% html_node("a") %>% html_attr("href")
NAICS2[nrow(NAICS2) + 1,] = list(code=columnText[1],
title=columnText[2],
businesses=columnText[3],
link=link)
}
colnames(NAICS2) = c("code", "title", "businesses", "link")
NAICS2
page
page = html(NAICS2$link[1])
page
NAICS4rows = page %>% html_nodes(".table tr.headerRow:not(.groupFinal)")
NAICS6rows = page %>% html_nodes(".table tr.groupRow")
for (i in 1:length(NAICS4rows))
{
row = NAICS4rows[i,]
columns = row %>% html_nodes("td")
columnText = columns %>% html_text()
link = columns[1] %>% html_node("a") %>% html_attr("href")
NAICS4[nrow(NAICS4) + 1,] = list(code=columnText[1],
title=columnText[2],
businesses=columnText[3],
link=link)
}
length(NAICS4rows)
i
for (i in 1:length(NAICS4rows))
{
row = NAICS4rows[i]
columns = row %>% html_nodes("td")
columnText = columns %>% html_text()
link = columns[1] %>% html_node("a") %>% html_attr("href")
NAICS4[nrow(NAICS4) + 1,] = list(code=columnText[1],
title=columnText[2],
businesses=columnText[3],
link=link)
}
NAICS4 = data.frame(code=character(0), title=character(0), businesses=character(0), link=character(0), stringsAsFactors = FALSE)
NAICS6 = data.frame(code=character(0), title=character(0), businesses=character(0), link=character(0), stringsAsFactors = FALSE)
for (i in 1:length(NAICS4rows))
{
row = NAICS4rows[i]
columns = row %>% html_nodes("td")
columnText = columns %>% html_text()
link = columns[1] %>% html_node("a") %>% html_attr("href")
NAICS4[nrow(NAICS4) + 1,] = list(code=columnText[1],
title=columnText[2],
businesses=columnText[3],
link=link)
}
NAICS4
View(NAICS4)
for (i in 1:length(NAICS6rows))
{
row = NAICS6rows[i]
columns = row %>% html_nodes("td")
columnText = columns %>% html_text()
link = columns[1] %>% html_node("a") %>% html_attr("href")
NAICS6[nrow(NAICS6) + 1,] = list(code=columnText[1],
title=columnText[2],
businesses=columnText[3],
link=link)
}
View(NAICS6)
NAICS4 = data.frame(code=character(0), title=character(0), businesses=character(0), link=character(0), stringsAsFactors = FALSE)
NAICS6 = data.frame(code=character(0), title=character(0), businesses=character(0), link=character(0), stringsAsFactors = FALSE)
for (link in NAICS2$link)
{
page = html(link)
NAICS4rows = page %>% html_nodes(".table tr.headerRow:not(.groupFinal)")
NAICS6rows = page %>% html_nodes(".table tr.groupRow")
for (i in 1:length(NAICS4rows))
{
row = NAICS4rows[i]
columns = row %>% html_nodes("td")
columnText = columns %>% html_text()
link = columns[1] %>% html_node("a") %>% html_attr("href")
NAICS4[nrow(NAICS4) + 1,] = list(code=columnText[1],
title=columnText[2],
businesses=columnText[3],
link=link)
}
for (i in 1:length(NAICS6rows))
{
row = NAICS6rows[i]
columns = row %>% html_nodes("td")
columnText = columns %>% html_text()
link = columns[1] %>% html_node("a") %>% html_attr("href")
NAICS6[nrow(NAICS6) + 1,] = list(code=columnText[1],
title=columnText[2],
businesses=columnText[3],
link=link)
}
}
warnings()
NAICS2
NAICS4
save(NAICS2, file="NAICS2.RData")
save(NAICS4, file="NAICS4.RData")
save(NAICS6, file="NAICS6.RData")
list.dirs()
list.files()
setwd("C:/Users/tylerhardy/Exploratory/NAICS_Grabber")
list.files()
?list.files
list.files()
paste0(c("NAICS2", "NAICS4", "NAICS6"),".RData")
if (!(paste0(c("NAICS2", "NAICS4", "NAICS6"),".RData") %in% list.files()))
{
print("NONE FOUND")
}
paste0(c("NAICS2", "NAICS4", "NAICS6"),".RData")
(paste0(c("NAICS2", "NAICS4", "NAICS6"),".RData") %in% list.files())
if (!any(paste0(c("NAICS2", "NAICS4", "NAICS6"),".RData") %in% list.files()))
{
print("NONE FOUND")
}
if (any(paste0(c("NAICS2", "NAICS4", "NAICS6"),".RData") %in% list.files()))
{
print("NONE FOUND")
}
if (!any(paste0(c("NAICS2", "NAICS4", "NAICS6"),".RData") %in% list.files()))
{
save(NAICS2, "NAICS2.R")
save(NAICS4, "NAICS4.R")
save(NAICS6, "NAICS6.R")
}
NAICS2
NAICS2$code
NAICS4$code
NAICS6$code
NAICS2$code
NAICS2$code
NAICS4$code
NAICtypes = c("NAICS2", "NAICS4", "NAICS6")
for (NAICtype in NAICtypes)
{
fileName = paste0(NAICtype, ".RData")
if (!file.exists(fileName))
{
save(get(NAICtype), fileName)
} else {
print("exists")
}
}
NAICS2[1,]
NAICS2[1,]$code
as.numeric(NAICS2[1,]$code)
type(as.numeric(NAICS2[1,]$code))
typeof(as.numeric(NAICS2[1,]$code))
View(NAICS2)
typeof(as.numeric(NAICS2[5,]$code))
as.numeric(NAICS2[5,]$code)
is.na(as.numeric(NAICS2[5,]$code))
sub("(a+)", "z\\1z", c("abc", "def", "cba a", "aa"), perl=TRUE)
sub("(\\d*)-(\\d*)", "\\1\\2", c("10", "1-22", "233-4949", "aa"), perl=TRUE)
sub("(\\d*)-(\\d*)", "\\1,\\2", c("10", "1-22", "233-4949", "aa"), perl=TRUE)
> x <- c("abc", "def", "cba a", "aa")
> m <- gregexpr("a+", x, perl=TRUE)
> regmatches(x, m) <- list(c("one"), character(0), c("two", "three"), c("four"))
x <- c("abc", "def", "cba a", "aa")
m <- gregexpr("a+", x, perl=TRUE)
regmatches(x, m) <- list(c("one"), character(0), c("two", "three"), c("four"))
m
x
row
i=5
row = NAICS2[i,]
row
row$code
regmatches(row$code, regexec(regexHyphenated, row$code))
# Cleanup NAICS2 ----------------------------------------------------------
regexHyphenated = "(\\d*)-(\\d*)"
regmatches(row$code, regexec(regexHyphenated, row$code))
regmatches(row$code, regexec(regexHyphenated, row$code))[1]
regmatches(row$code, regexec(regexHyphenated, row$code))[[1]][1]
regmatches(row$code, regexec(regexHyphenated, row$code))[[1]][2]
regmatches(row$code, regexec(regexHyphenated, row$code))[[1]][3]
regexHyphenated = "(\\d*)-(\\d*)"
NAICS2new = data.frame(code=character(0), title=character(0), businesses=character(0), link=character(0), stringsAsFactors = FALSE)
for (i in 1:nrow(NAICS2))
{
row = NAICS2[i,]
if (is.na(as.numeric(row$code))) { # hyphenated
m = regmatches(row$code, regexec(regexHyphenated, row$code))
start = as.numeric(m[[1]][2])
end = as.numeric(m[[1]][3])
for (j in start:end)
{
print(j)
}
NAICS2new[nrow(NAICS2new) + 1,] = row
} else {
NAICS2new[nrow(NAICS2new) + 1,] = row
}
}
regexHyphenated = "(\\d*)-(\\d*)"
NAICS2new = data.frame(code=character(0), title=character(0), businesses=character(0), link=character(0), stringsAsFactors = FALSE)
for (i in 1:nrow(NAICS2))
{
row = NAICS2[i,]
if (is.na(as.numeric(row$code))) { # hyphenated
print(row$code)
m = regmatches(row$code, regexec(regexHyphenated, row$code))
start = as.numeric(m[[1]][2])
end = as.numeric(m[[1]][3])
for (j in start:end)
{
print(j)
}
NAICS2new[nrow(NAICS2new) + 1,] = row
} else {
NAICS2new[nrow(NAICS2new) + 1,] = row
}
}
i
NAICS2[20,]
NAICS2[20,]$code
regexHyphenated = "(\\d*)-(\\d*)"
NAICS2new = data.frame(code=character(0), title=character(0), businesses=character(0), link=character(0), stringsAsFactors = FALSE)
for (i in 1:nrow(NAICS2))
{
row = NAICS2[i,]
if (is.na(as.numeric(row$code))) { # hyphenated
print(row$code)
m = regmatches(row$code, regexec(regexHyphenated, row$code))
start = as.numeric(m[[1]][2])
end = as.numeric(m[[1]][3])
for (j in start:end)
{
print(j)
}
} else {
}
}
i
NAICS2$code
?as.numeric
suppressWarnings(as.numeric(NA))
suppressWarnings(as.numeric("AA"))
# Cleanup NAICS2 ----------------------------------------------------------
regexHyphenated = "(\\d*)-(\\d*)"
NAICS2new = data.frame(code=character(0), title=character(0), businesses=character(0), link=character(0), stringsAsFactors = FALSE)
for (i in 1:nrow(NAICS2))
{
row = NAICS2[i,]
if (is.na(suppressWarnings(as.numeric(row$code)))) { # hyphenated
m = regmatches(row$code, regexec(regexHyphenated, row$code))
start = as.numeric(m[[1]][2])
end = as.numeric(m[[1]][3])
for (j in start:end)
{
print(j)
}
} else {
}
}
regexHyphenated = "(\\d*)-(\\d*)"
NAICS2new = data.frame(code=character(0), title=character(0), businesses=character(0), link=character(0), stringsAsFactors = FALSE)
for (i in 1:nrow(NAICS2))
{
row = NAICS2[i,]
if (is.na(suppressWarnings(as.numeric(row$code)))) { # hyphenated
m = regmatches(row$code, regexec(regexHyphenated, row$code))
start = as.numeric(m[[1]][2])
end = as.numeric(m[[1]][3])
for (j in start:end)
{
r = row
r$code = j
NAICS2[nrow(NAICS2) + 1,] = r
}
} else {
NAICS2[nrow(NAICS2) + 1,] = row
}
}
NAICS2new
NAICS2 = data.frame(code=character(0), title=character(0), businesses=character(0), link=character(0), stringsAsFactors = FALSE)
rows = mainPage %>% html_nodes(".table tr")
for (i in 2:(length(rows)-1))
{
row = rows[i]
columns = row %>% html_nodes("td")
columnText = columns %>% html_text()
link = columns[1] %>% html_node("a") %>% html_attr("href")
NAICS2[nrow(NAICS2) + 1,] = list(code=columnText[1],
title=columnText[2],
businesses=columnText[3],
link=link)
}
colnames(NAICS2) = c("code", "title", "businesses", "link")
regexHyphenated = "(\\d*)-(\\d*)"
NAICS2new = data.frame(code=character(0), title=character(0), businesses=character(0), link=character(0), stringsAsFactors = FALSE)
for (i in 1:nrow(NAICS2))
{
row = NAICS2[i,]
if (is.na(suppressWarnings(as.numeric(row$code)))) { # hyphenated
m = regmatches(row$code, regexec(regexHyphenated, row$code))
start = as.numeric(m[[1]][2])
end = as.numeric(m[[1]][3])
for (j in start:end)
{
r = row
r$code = j
NAICS2new[nrow(NAICS2new) + 1,] = r
}
} else {
NAICS2new[nrow(NAICS2new) + 1,] = row
}
}
NAICS2new
nrow(NAICS2new)
nrow(NAICS2)
View(NAICS2)
View(NAICS2new)
NAICtypes = c("NAICS2", "NAICS4", "NAICS6")
for (NAICtype in NAICtypes)
{
fileName = paste0(NAICtype, ".RData")
if (!file.exists(fileName))
{
save(get(NAICtype), fileName)
}
}
NAICtype
get("NAICS2")
get(NAICtype)
NAICtypes = c("NAICS2", "NAICS4", "NAICS6")
for (NAICtype in NAICtypes)
{
fileName = paste0(NAICtype, ".RData")
if (!file.exists(fileName))
{
save(get(NAICtype), fileName)
}
}
NAICStypes = c("NAICS2", "NAICS4", "NAICS6")
for (NAICStype in NAICStypes)
{
fileName = paste0(NAICStype, ".RData")
if (!file.exists(fileName))
{
print(NAICStype)
save(get(NAICStype), fileName)
}
}
NAICStypes = c("NAICS2", "NAICS4", "NAICS6")
for (NAICStype in NAICStypes)
{
fileName = paste0(NAICStype, ".RData")
if (!file.exists(fileName))
{
print(NAICStype)
x = get(NAICStype)
save(x, fileName)
}
}
NAICStypes = c("NAICS2", "NAICS4", "NAICS6")
for (NAICStype in NAICStypes)
{
fileName = paste0(NAICStype, ".RData")
if (!file.exists(fileName))
{
print(NAICStype)
x = get(NAICStype)
save(x, file=fileName)
}
}
